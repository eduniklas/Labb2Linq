// <auto-generated />
using System;
using LinqSchool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinqSchool.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230503123156_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LinqSchool.Models.ActiveCourse", b =>
                {
                    b.Property<int>("ActiveCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActiveCourseId"));

                    b.Property<int>("FK_CourseId")
                        .HasColumnType("int");

                    b.Property<int>("FK_StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ActiveCourseId");

                    b.HasIndex("FK_CourseId");

                    b.HasIndex("FK_StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ActiveCourses");

                    b.HasData(
                        new
                        {
                            ActiveCourseId = 1,
                            FK_CourseId = 1,
                            FK_StudentId = 1
                        },
                        new
                        {
                            ActiveCourseId = 2,
                            FK_CourseId = 1,
                            FK_StudentId = 3
                        },
                        new
                        {
                            ActiveCourseId = 3,
                            FK_CourseId = 2,
                            FK_StudentId = 2
                        },
                        new
                        {
                            ActiveCourseId = 4,
                            FK_CourseId = 4,
                            FK_StudentId = 4
                        },
                        new
                        {
                            ActiveCourseId = 5,
                            FK_CourseId = 2,
                            FK_StudentId = 3
                        },
                        new
                        {
                            ActiveCourseId = 6,
                            FK_CourseId = 3,
                            FK_StudentId = 1
                        },
                        new
                        {
                            ActiveCourseId = 7,
                            FK_CourseId = 3,
                            FK_StudentId = 2
                        },
                        new
                        {
                            ActiveCourseId = 8,
                            FK_CourseId = 1,
                            FK_StudentId = 4
                        });
                });

            modelBuilder.Entity("LinqSchool.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassName = "3A"
                        },
                        new
                        {
                            ClassId = 2,
                            ClassName = "2A"
                        },
                        new
                        {
                            ClassId = 3,
                            ClassName = "3B"
                        },
                        new
                        {
                            ClassId = 4,
                            ClassName = "2B"
                        });
                });

            modelBuilder.Entity("LinqSchool.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FK_TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseDescription = "Simpel programmering",
                            CourseName = "Programmering 1",
                            FK_TeacherId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CourseDescription = "Svårare programmering",
                            CourseName = "Programmering 2",
                            FK_TeacherId = 3
                        },
                        new
                        {
                            CourseId = 3,
                            CourseDescription = "Fysisk aktivitet",
                            CourseName = "Idrott",
                            FK_TeacherId = 4
                        },
                        new
                        {
                            CourseId = 4,
                            CourseDescription = "Räkna räkna räkna",
                            CourseName = "Matematik",
                            FK_TeacherId = 2
                        });
                });

            modelBuilder.Entity("LinqSchool.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("FK_ClassId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Address = "Midland 42",
                            City = "Stad",
                            FK_ClassId = 1,
                            FirstName = "Niklas",
                            LastName = "Niklasson"
                        },
                        new
                        {
                            StudentId = 2,
                            Address = "Midland 3",
                            City = "Stad",
                            FK_ClassId = 2,
                            FirstName = "Sten",
                            LastName = "Stensson"
                        },
                        new
                        {
                            StudentId = 3,
                            Address = "Skåneland 22",
                            City = "Stranden",
                            FK_ClassId = 2,
                            FirstName = "Rick",
                            LastName = "Ricksson"
                        },
                        new
                        {
                            StudentId = 4,
                            Address = "Norrland 35",
                            City = "Skogen",
                            FK_ClassId = 1,
                            FirstName = "Morty",
                            LastName = "Mortson"
                        });
                });

            modelBuilder.Entity("LinqSchool.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Address = "Norrland 1",
                            City = "Skogton",
                            FirstName = "Reidar",
                            LastName = "Reidarson"
                        },
                        new
                        {
                            TeacherId = 2,
                            Address = "Midland 1",
                            City = "Staden",
                            FirstName = "Tobias",
                            LastName = "Tobiasson"
                        },
                        new
                        {
                            TeacherId = 3,
                            Address = "Norrland 15",
                            City = "Skogton",
                            FirstName = "Gunn",
                            LastName = "Gunnarson"
                        },
                        new
                        {
                            TeacherId = 4,
                            Address = "Skåneland 1",
                            City = "Stranden",
                            FirstName = "Sven",
                            LastName = "Svensson"
                        });
                });

            modelBuilder.Entity("LinqSchool.Models.ActiveCourse", b =>
                {
                    b.HasOne("LinqSchool.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("FK_CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinqSchool.Models.Student", "Students")
                        .WithMany("ActiveCourses")
                        .HasForeignKey("FK_StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinqSchool.Models.Teacher", null)
                        .WithMany("ActiveCourses")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LinqSchool.Models.Student", b =>
                {
                    b.Navigation("ActiveCourses");
                });

            modelBuilder.Entity("LinqSchool.Models.Teacher", b =>
                {
                    b.Navigation("ActiveCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
